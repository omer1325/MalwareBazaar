using MalwareBazaar.API.DTOs;
using MalwareBazaar.Core.Models;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Identity;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace MalwareBazaar.API.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class HomeController : ControllerBase
    {
        public UserManager<AppUser> _userManager { get; }
        public SignInManager<AppUser> _signInManager { get; }

        public HomeController(UserManager<AppUser> userManager, SignInManager<AppUser> signInManager)
        {
            _signInManager = signInManager;
            _userManager = userManager;
        }

        [HttpPost("signup")]
        public async Task<IActionResult> SignUp(UserDto userDto)
        {
            if (ModelState.IsValid)
            {
                AppUser user = new AppUser();
                user.UserName = userDto.UserName;
                user.Email = userDto.Email;

                //Password kısmını burada vermemizin amacı Passwordu text şeklinde değilde şifreli şeklince DataBase'e kaydetmesidir.
                IdentityResult result = await _userManager.CreateAsync(user, userDto.Password);

                if (result.Succeeded)
                {
                    return Ok("Başarılı");
                }
                else
                {
                    foreach (var item in result.Errors)
                    {
                        ModelState.AddModelError("", item.Description);
                    }
                }
            }
            return Ok(userDto);
        }

        [HttpPost("login")]
        public async Task<IActionResult> LogIn(LogInDTO logInDTO)
        {
            if (ModelState.IsValid)
            {
                AppUser user = await _userManager.FindByEmailAsync(logInDTO.Email);
                if (user != null )
                {
                    //Kullanıcı hakkında Cookie var ise siler, çünkü kullanıcı tekrardan login oluyor.
                    await _signInManager.SignOutAsync();

                    Microsoft.AspNetCore.Identity.SignInResult result = await _signInManager.PasswordSignInAsync(user,
                        logInDTO.Password, false, false);
                    if (result.Succeeded)
                    {
                        return Ok("Başarılı");
                    }
                    else
                    {
                        ModelState.AddModelError("", "Email adresiniz veya şifreniz yanlıştır.");
                    }
                }
                else
                {
                    ModelState.AddModelError("", "Bu email adresine ait kayıtlı kullanıcı bulunamamıştır.");
                }
            }


            return Ok("Başarısız");
        }
    }
}
